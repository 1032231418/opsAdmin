"""
Django settings for devops project.

Generated by 'django-admin startproject' using Django 1.11.16.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import sys
import datetime

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0,os.path.join(BASE_DIR,"apps"))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '8=(5jgqps9sn4@ibzfax(ijt^k9pfz8z@!hjpbxma#nm13$ck%'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = False


ALLOWED_HOSTS = ['*']

AUTH_USER_MODEL = 'users.User'

# Application definition


INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'groupUsers',
    'users',
    'groups',
    'permissions',
    'corsheaders',
    'tencent',
    'resources',
    'books',
    'workorder',
    'autoask',
    'project',
    'release',
    'djcelery',
    'django_apscheduler',
    # 过滤
    'django_filters'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# 允许跨域
CORS_ORIGIN_WHITELIST = (
    'devops.test.com',
    '127.0.0.1:9090',
    '127.0.0.1:8181',
)

ROOT_URLCONF = 'devops.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'devops.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
		'ENGINE': 'django.db.backends.mysql',
		'NAME': 'devops',
		'USER': 'root',
		'PASSWORD': '123456',
		'HOST': '127.0.0.1',
		'PORT': 3306,
		'OPTIONS':{
			'init_command': 'SET default_storage_engine=INNODB;',
		},
	}
}



# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

# USE_TZ = True
USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static/")
# from rest_framework.permissions import DjangoModelPermissions


REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'devops.paginations.Pagination',
    # 'DEFAULT_PAGINATION_CLASS': 'users.filter.UserFilter',
    'PAGE_SIZE': 10,
    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        # 用户登录
        'rest_framework.permissions.IsAuthenticated',
        # 权限
        'rest_framework.permissions.DjangoModelPermissions',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),

}

JWT_AUTH = {
    'JWT_EXPIRATION_DELTA': datetime.timedelta(days=3),
    'JWT_AUTH_HEADER_PREFIX': 'JWT',
}

QCLOUD_SECRETID = "AKIDFaq5EbGxiQx23213XtCJJ7j9NQuyTq"
QCLOUD_SECRETKEY = "LTP8fz72lOr23213FerunUyGQN7f4LTP"

# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'loggers': {
#         'reboot': {
#             'handlers': ["reboot"],
#             'level': 'DEBUG',
#         },
#     },
#     'handlers': {
#         'reboot': {
#             'level': 'DEBUG',
#             'class': 'logging.StreamHandler',
#             'formatter': 'json',
#         }
#     },
#     'formatters': {
#         'reboot': {
#             'format': '%(asctime)s - %(pathname)s:%(lineno)d[%(levelname)s] - %(message)s'
#         },
#         'simple': {
#             'format': '%(asctime)s %(levelname)s %(message)s'
#         },
#         'verbose': {
#             'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
#         },
#         'json': {
#             'format': '{"levelno":"%(levelno)s","levelname": "%(levelname)s", "asctime":"%(asctime)s", "filename":"%(filename)s", "filename":"%(funcName)s"}'
#         }
#     },
#     "root":{
#         "handlers":["reboot"],
#         "level":"DEBUG",
#     }
# }

DOMAIN = "@test.com"
GITLAB_HTTP_URI = "http://192.168.25.100"
GITLAB_TOKEN = "Hf5d123LG7N2wJ9Rhe"

JENKINS_URL = "http://192.168.25.100/jenkins"
JENINS_TOKEN = "88d0d3312312183f5a3ac44c6c7f2b494"
JENKINS_USERNAME = 'user'
JENKINS_PASSWORD = ''

import djcelery
djcelery.setup_loader()
# BROKER_URL = 'redis://127.0.0.1:6379/0' # redis作为中间件
BROKER_URL = 'redis://:123123@192.168.25.100:6379/0' # redis作为中间件
BROKER_TRANSPORT = 'redis'
CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler' # Backend数据库
CELERYD_LOG_FILE = BASE_DIR + "/logs/celery/celery.log"

# 邮件
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = False   #是否使用TLS安全传输协议(用于在两个通信应用程序之间提供保密性和数据完整性。)
EMAIL_USE_SSL = True    #是否使用SSL加密，qq企业邮箱要求使用
EMAIL_HOST = 'smtpdm.aliyun.com'   #发送邮件的邮箱 的 SMTP服务器，这里用了163邮箱
EMAIL_PORT = 465     #发件箱的SMTP服务器端口
EMAIL_HOST_USER = 'test@notice.test.com'    #发送邮件的邮箱地址
EMAIL_HOST_PASSWORD = 'fdsf234gfdg..24fd'         #发送邮件的邮箱密码(这里使用的是授权码)